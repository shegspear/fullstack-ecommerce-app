{"version":3,"sources":["Constants/ProductsConstants.js","Constants/CartConstants.js","Constants/userConstants.js","Constants/orderConstants.js","Store.js","Reducers/productReducers.js","Reducers/cartReducers.js","Reducers/userReducer.js","Reducers/orderReducers.js","Components/SearchBox.js","Actions/userActions.js","Components/Header.js","Components/Footer.js","Components/Rating.js","Components/Product.js","Actions/productActions.js","Components/Message.js","Components/Loader.js","Components/Paginate.js","Components/ProductCarousel.js","Components/Meta.js","Screens/HomeScreen.js","Screens/ProductScreen.js","Actions/cardActions.js","Screens/CartScreen.js","Components/FormContainer.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","Screens/ProfileScreen.js","Actions/orderActions.js","Components/CheckoutSteps.js","Screens/ShippingScreen.js","Screens/PaymentScreen.js","Screens/PlaceOrderScreen.js","Screens/OrderScreen.js","Screens/UserListScreen.js","Screens/UserEditScreen.js","Screens/ProductListScreen.js","Screens/ProductEditScreen.js","Screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","X","map","x","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","getUserDetails","id","getState","a","axios","get","headers","Authorization","token","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductDetails","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","createdAt","substring","productId","review","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","config","Headers","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","console","log","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","loadingupdate","uploadFilehandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","Store","getElementById"],"mappings":"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","file":"static/js/main.f8f1bc87.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT'; \r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { \r\n  productListReducer, \r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './Reducers/productReducers';\r\n\r\nimport { cartReducer } from './Reducers/cartReducers';\r\n\r\nimport { \r\n  userLoginReducer, \r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer, \r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './Reducers/userReducer';\r\nimport { \r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer, \r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './Reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? \r\nJSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \r\nJSON.parse(localStorage.getItem('userInfo')) : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? \r\nJSON.parse(localStorage.getItem('shippingAddress')) : {};\r\n\r\nconst initialState = { \r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// current bug may come from here typo \r\nexport default store;","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../Constants/ProductsConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload.products, \r\n                pages: action.payload.pages, \r\n                page: action.payload.page,\r\n            };\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n    state = { product: {reviews: []} }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const productDeleteReducer = (\r\n    state = { }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const productCreateReducer = (\r\n    state = { }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const productUpdateReducer = (\r\n    state = { product: {} }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const productReviewCreateReducer = (\r\n    state = { }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const productTopRatedReducer = (\r\n    state = { products: [] }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;    \r\n    };\r\n};","import {\r\n   CART_ADD_ITEM,\r\n   CART_REMOVE_ITEM,\r\n   CART_SAVE_SHIPPING_ADDRESS,\r\n   CART_SAVE_PAYMENT_METHOD,\r\n} from '../Constants/CartConstants';\r\n\r\nexport const cartReducer = (\r\n    state = {cartItems: [], shippingAddress: {}}, \r\n    action\r\n    ) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find(X => X.product === item.product);\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            };\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n            };\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            };\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../Constants/userConstants';\r\n\r\nexport const userLoginReducer = (\r\n    state = {}, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true};\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return{};\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const userRegisterReducer = (\r\n    state = {}, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true};\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const userDetailsReducer = (\r\n    state = { user: {} }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true};\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const userUpdateProfileReducer = (\r\n    state = {}, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true};\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const userListReducer = (\r\n    state = { users: [] }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true};\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LIST_RESET:\r\n            return {users: []};\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const userDeleteReducer = (\r\n    state = { }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true};\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;    \r\n    };\r\n};\r\n\r\nexport const userUpdateReducer = (\r\n    state = { user: {} }, \r\n    action\r\n    ) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true};\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state;    \r\n    };\r\n};","import { \r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL, \r\n  ORDER_DELIVER_RESET,\r\n} from \"../Constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      \r\n    default:\r\n      return state;  \r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = {loading: true, orderItems: [], shippingAddress: {}}, \r\n  action\r\n  ) => {\r\n  switch(action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      \r\n    default:\r\n      return state;  \r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (\r\n  state = {}, \r\n  action\r\n  ) => {\r\n  switch(action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_PAY_RESET:\r\n      return{};\r\n      \r\n    default:\r\n      return state;  \r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (\r\n  state = {}, \r\n  action\r\n  ) => {\r\n  switch(action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_DELIVER_RESET:\r\n      return{};\r\n      \r\n    default:\r\n      return state;  \r\n  }\r\n};\r\n\r\n\r\nexport const orderListMyReducer = (\r\n  state = { orders: [] }, \r\n  action\r\n  ) => {\r\n  switch(action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n      \r\n    default:\r\n      return state;  \r\n  }\r\n};\r\n\r\nexport const orderListReducer = (\r\n  state = { orders: [] }, \r\n  action\r\n  ) => {\r\n  switch(action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n      \r\n    default:\r\n      return state;  \r\n  }\r\n};","import React, {useState} from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push(`/`)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder=\"Search Product....\"\r\n                className='mr-sm-2 ml-sm-5'\r\n            >\r\n            </Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios';\r\n\r\nimport { \r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL, \r\n  USER_LOGIN_REQUEST, \r\n  USER_LOGIN_SUCCESS, \r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../Constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from '../Constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\r\n  try {\r\n\r\n    dispatch({\r\n        type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n       Headers: {\r\n        'Content-Type' : 'application/json'\r\n       }\r\n    };\r\n\r\n    const {data} = await axios.post('/api/users/login', \r\n    { email, password },\r\n     config\r\n    );\r\n\r\n    dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });   \r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n\r\n  try {\r\n\r\n    dispatch({\r\n        type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n       Headers: {\r\n        'Content-Type' : 'application/json'\r\n       }\r\n    };\r\n\r\n    const {data} = await axios.post('/api/users', \r\n    { name, email, password },\r\n     config\r\n    );\r\n\r\n    dispatch({\r\n        type: USER_REGISTER_SUCCESS,\r\n        payload: data\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n\r\n  try {\r\n\r\n    dispatch({\r\n        type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const {data} = await axios.get(\r\n      `/api/users/${id}`, \r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n        type: USER_DETAILS_SUCCESS,\r\n        payload: data\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_DETAILS_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n\r\n  try {\r\n\r\n    dispatch({\r\n        type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const {data} = await axios.put(\r\n      `/api/users/profile`,\r\n      user, \r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n        type: USER_UPDATE_PROFILE_SUCCESS,\r\n        payload: data\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_UPDATE_PROFILE_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const ListUsers = () => async (dispatch, getState) => {\r\n\r\n  try {\r\n\r\n    dispatch({\r\n        type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const {data} = await axios.get(\r\n      `/api/users`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n        type: USER_LIST_SUCCESS,\r\n        payload: data\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_LIST_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n\r\n  try {\r\n\r\n    dispatch({\r\n        type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    await axios.delete(\r\n      `/api/users/${id}`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n        type: USER_DELETE_SUCCESS,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n        type: USER_DELETE_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { logout } from '../Actions/userActions';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        \r\n                        <Route render={({history}) => <SearchBox history={history} />} />\r\n\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='profile'>\r\n                                      <NavDropdown.Item> Profile </NavDropdown.Item>\r\n                                    </LinkContainer> \r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                      Logout\r\n                                    </NavDropdown.Item> \r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link>\r\n                                        <i className=\"fas fa-user\"></i> Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                           {\r\n                             userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                     <NavDropdown.Item> Users </NavDropdown.Item>\r\n                                    </LinkContainer> \r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                     <NavDropdown.Item> Products </NavDropdown.Item>\r\n                                    </LinkContainer> \r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                     <NavDropdown.Item> Orders </NavDropdown.Item>\r\n                                    </LinkContainer> \r\n                                 </NavDropdown> \r\n                             )  \r\n                           } \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-5\">\r\n                        Copyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n           <span>\r\n               <i style={{color}}\r\n                className={\r\n                    value >= 1 ? 'fas fa-star' :\r\n                    value >= 0.5 ? 'fas fa-star-half-alt' :\r\n                     'far fa-star'\r\n                          }\r\n                ></i>\r\n           </span> \r\n\r\n           <span>\r\n               <i style={{color}}\r\n                className={\r\n                    value >= 2 ? 'fas fa-star' :\r\n                    value >= 1.5 ? 'fas fa-star-half-alt' :\r\n                     'far fa-star'\r\n                          }\r\n                ></i>\r\n           </span> \r\n\r\n           <span>\r\n               <i style={{color}}\r\n                className={\r\n                    value >= 3 ? 'fas fa-star' :\r\n                    value >= 2.5 ? 'fas fa-star-half-alt' :\r\n                     'far fa-star'\r\n                          }\r\n                ></i>\r\n           </span> \r\n\r\n           <span>\r\n               <i style={{color}}\r\n                className={\r\n                    value >= 4 ? 'fas fa-star' :\r\n                    value >= 3.5 ? 'fas fa-star-half-alt' :\r\n                     'far fa-star'\r\n                          }\r\n                ></i>\r\n           </span> \r\n\r\n           <span>\r\n               <i style={{color}}\r\n                className={\r\n                    value >= 5 ? 'fas fa-star' :\r\n                    value >= 4.5 ? 'fas fa-star-half-alt' :\r\n                     'far fa-star'\r\n                          }\r\n                ></i>\r\n           </span> \r\n\r\n          <span>\r\n              {text && text}\r\n          </span>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n// APPLYING DEFAULT PROP VALUE\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n}\r\n\r\nRating.propTypes ={\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\"> \r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                \r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>  \r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n \r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n\r\n            </Card.Body>\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default Product;\r\n","import axios from 'axios';\r\n\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../Constants/ProductsConstants';\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n \r\n    try {\r\n   \r\n      dispatch({\r\n          type: PRODUCT_DELETE_REQUEST,\r\n      });\r\n   \r\n      const { userLogin: { userInfo } } = getState();\r\n   \r\n       await axios.delete(\r\n       `/api/products/${id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          }\r\n        }\r\n      );\r\n   \r\n      dispatch({\r\n          type: PRODUCT_DELETE_SUCCESS\r\n      });\r\n   \r\n    } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_DELETE_FAIL,\r\n          payload: error.response && error.response.data.message ?\r\n          error.response.data.message : error.message,\r\n      });\r\n    }\r\n   \r\n   };\r\n\r\n   export const createProduct = () => async (dispatch, getState) => {\r\n \r\n    try {\r\n   \r\n      dispatch({\r\n          type: PRODUCT_CREATE_REQUEST,\r\n      });\r\n   \r\n      const { userLogin: { userInfo } } = getState();\r\n   \r\n       const {data} = await axios.post(\r\n       `/api/products`,\r\n       {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          }\r\n        }\r\n      );\r\n   \r\n      dispatch({\r\n          type: PRODUCT_CREATE_SUCCESS,\r\n          payload: data\r\n      });\r\n   \r\n    } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_CREATE_FAIL,\r\n          payload: error.response && error.response.data.message ?\r\n          error.response.data.message : error.message,\r\n      });\r\n    }\r\n   \r\n   };\r\n\r\n  export const updateProduct = (product) => async (dispatch, getState) => {\r\n \r\n    try {\r\n   \r\n      dispatch({\r\n          type: PRODUCT_UPDATE_REQUEST,\r\n      });\r\n   \r\n      const { userLogin: { userInfo } } = getState();\r\n   \r\n       const {data} = await axios.put(\r\n       `/api/products/${product._id}`,\r\n       product,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          }\r\n        }\r\n      );\r\n   \r\n      dispatch({\r\n          type: PRODUCT_UPDATE_SUCCESS,\r\n          payload: data\r\n      });\r\n   \r\n    } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_UPDATE_FAIL,\r\n          payload: error.response && error.response.data.message ?\r\n          error.response.data.message : error.message,\r\n      });\r\n    }\r\n   \r\n   };\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n\r\n  try {\r\n  \r\n    dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    });\r\n  \r\n    const { userLogin: { userInfo } } = getState();\r\n  \r\n    await axios.post(\r\n    `/api/products/${productId}/reviews`,\r\n    review,\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      }\r\n    }\r\n    );\r\n  \r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    });\r\n  \r\n  } catch (error) {\r\n    dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n  \r\n  };\r\n\r\n  export const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/top`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message,\r\n        });\r\n    }\r\n};","import React from 'react';\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n          {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n          animation='border' \r\n          role='status'\r\n          style={{\r\n            width: '100px', \r\n            height: '100px',\r\n            margin: 'auto',\r\n            display: 'block',\r\n          }} \r\n        >\r\n         <span className='sr-only'> Loading... </span>   \r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({pages, page, isAdmin = false, keyword = ''}) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x + 1}\r\n                    to={\r\n                        !isAdmin \r\n                            ? keyword \r\n                                ? `/search/${keyword}/page/${x+1}` \r\n                                : `/page/${x+1}` \r\n                        : `/admin/productList/${x+1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x+1 === page} >{x+1}</Pagination.Item>\r\n                </LinkContainer> \r\n            ))}\r\n        </Pagination>\r\n    );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../Actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst Meta = ({title, description, keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name=\"description\" content={description} />\r\n            <meta name='keywords' content={keywords} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To ProShop',\r\n    description: 'We sell the best product for cheap',\r\n    keywords: 'electronics, buy electronics, cheap electronics',\r\n}\r\n\r\nexport default Meta;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nimport Product from '../Components/Product';\r\nimport { listProducts } from '../Actions/productActions';\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport Paginate from '../Components/Paginate';\r\nimport ProductCarousel from '../Components/ProductCarousel';\r\nimport Meta from '../Components/Meta';\r\n\r\nconst HomeScreen = ({match}) => {\r\n    const keyword = match.params.keyword;\r\n\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n    \r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? (<ProductCarousel /> ): (<Link to='/' className=\"btn btn-light\">Go Back</Link>)}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n              <Loader />\r\n              ) :  error ? (\r\n              <Message variant='danger'>{error}</Message>\r\n              ) : (\r\n               <>\r\n                <Row>\r\n                    {products.map((product) => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Paginate \r\n                    page={page} \r\n                    pages={pages} \r\n                    keyword={keyword ? keyword : ''} \r\n                />\r\n               </>\r\n               )\r\n             }         \r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport {\r\n    listProductDetails,\r\n    createProductReview,\r\n} from '../Actions/productActions';\r\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../Constants/ProductsConstants';\r\n\r\nimport Rating from '../Components/Rating';\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\nimport Meta from '../Components/Meta';\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n   \r\n   const [qty, setQty] = useState(1);\r\n   const [rating, setRating] = useState(0);\r\n   const [comment, setComment] = useState('');\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const productDetails = useSelector(state => state.productDetails);\r\n   const {loading, error, product} = productDetails;\r\n\r\n   const userLogin = useSelector(state => state.userLogin);\r\n   const { userInfo } = userLogin;\r\n\r\n   const productReviewCreate = useSelector(state => state.productReviewCreate);\r\n   const {success: successProductReview, error: errorProductReview} = productReviewCreate;\r\n\r\n   useEffect(() => {\r\n       if(successProductReview) {\r\n           alert('Reviw Submitted!');\r\n           setRating(0);\r\n           setComment('');\r\n           dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n       }\r\n      dispatch(listProductDetails(match.params.id));  \r\n    }, [dispatch, match, successProductReview]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createProductReview(match.params.id, {\r\n           rating,\r\n           comment \r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"btn btn-light btn-outline-dark my-3\" to='/'>\r\n                Go Back\r\n            </Link>\r\n\r\n            {loading ? (\r\n              <Loader/>\r\n              ) : \r\n              error ? (\r\n                  <Message variant='danger'> {error} </Message>\r\n              ) : (\r\n                <> \r\n                <Meta title={product.name} /> \r\n                <Row>\r\n                    <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                    </Col>\r\n\r\n                    <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Rating \r\n                                value={product.rating}\r\n                                text={`${product.numReviews} reviews`} />\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                                Price: ${product.price}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                                Description: {product.description}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                    </Col>\r\n\r\n                    <Col md={3}>\r\n                        <Card>\r\n                        <ListGroup variant='flush'>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <strrong>${product.price}</strrong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stuck'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col> Qty </Col>\r\n                                        <Col>\r\n                                          <Form.Control\r\n                                             as='select'\r\n                                             value={qty}\r\n                                             onChange={(e) => {setQty(e.target.value)}}\r\n                                          >\r\n                                            {[...Array(product.countInStock).keys()].map(x => (\r\n                                               <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                               </option>\r\n                                            ))}\r\n                                          </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    onClick={addToCartHandler}\r\n                                    className='btn-block' \r\n                                    type='button'\r\n                                    disabled={product.countInStock === 0}\r\n                                    >\r\n                                    Add to cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <h2>Reviews</h2>\r\n                    {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                    <ListGroup variant='flush'>\r\n                        {product.reviews.map(reviews => (\r\n                            <ListGroup.Item key={reviews._id}>\r\n                                <strong>{reviews.name}</strong>\r\n                                <Rating value={reviews.rating} />\r\n                                <p>{reviews.createdAt.substring(0, 10)}</p>\r\n                                <p>{reviews.comment}</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item>\r\n                            <h2>Write a Customer Review</h2>\r\n                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                            {userInfo ? (\r\n                                <Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label>Rating</Form.Label>\r\n                                        <Form.Control\r\n                                            as='select'\r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}\r\n                                        >\r\n                                            <option value=''>Select...</option>\r\n                                            <option value='1'>1 - Poor</option>\r\n                                            <option value='2'>2 - Fair</option>\r\n                                            <option value='3'>3 - Good</option>\r\n                                            <option value='4'>4 - Very Good</option>\r\n                                            <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Comment</Form.Label>\r\n                                        <Form.Control \r\n                                            as=\"textarea\" \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}\r\n                                        >\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type='submit' variant='primary'>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>\r\n                            ) : (\r\n                                <Message>Please <Link to='/login'>sign in</Link> to write a review</Message>\r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                  </Col>  \r\n                </Row>\r\n                </>\r\n              )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport { \r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD, \r\n} from '../Constants/CartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const {data} = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n      type: CART_ADD_ITEM,\r\n      payload: {\r\n        product: data._id,\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        countInStock: data.countInStock,\r\n        qty\r\n      },\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};","import React, {useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from 'react-bootstrap';\r\n\r\nimport Message from '../Components/Message';\r\nimport {addToCart, removeFromCart} from '../Actions/cardActions';\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const {cartItems} = cart;\r\n\r\n  useEffect(() => {\r\n    if(productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n    // console.log(id)\r\n  };\r\n  \r\n  const checkoutHandler = () => {\r\n    history.push(`/login?redirect=shipping`);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {\r\n          cartItems.length === 0 ? (\r\n            <Message> \r\n               Your cart is empty\r\n               <Link to='/'> Go Back</Link> \r\n            </Message>\r\n          ) : (\r\n            <ListGroup variant='flush'>\r\n              {\r\n                cartItems.map(item => (\r\n                  <ListGroup.Item key={item.product}>\r\n                    <Row>\r\n\r\n                      <Col md={2}>\r\n                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                      </Col>\r\n\r\n                      <Col md={3}>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                      </Col>\r\n\r\n                      <Col md={2}>${item.price}</Col>\r\n\r\n                      <Col md={2}>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={item.qty}\r\n                          onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                        >\r\n                          {[...Array(item.countInStock).keys()].map(x => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n\r\n                      <Col md={2}>\r\n                       <Button \r\n                         type='button'\r\n                         variant='light'\r\n                         onClick={() => removeFromCartHandler(item.product)}\r\n                       >\r\n                        <i className='fas fa-trash'></i>\r\n                       </Button>\r\n                      </Col>\r\n\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))\r\n              }\r\n            </ListGroup>\r\n          )\r\n        }\r\n      </Col> \r\n\r\n      <Col md={4}>\r\n        <Card>\r\n\r\n         <ListGroup variant='flush'>\r\n\r\n           <ListGroup.Item>\r\n             <h2>\r\n               Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n             </h2>\r\n             ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n           </ListGroup.Item>\r\n\r\n           <ListGroup.Item>\r\n             <Button\r\n               type='button'\r\n               className='btn-block'\r\n               disabled={cartItems.length === 0}\r\n               onClick={checkoutHandler}\r\n             >\r\n               Proceed To Checkout\r\n             </Button>\r\n           </ListGroup.Item>\r\n\r\n         </ListGroup> \r\n\r\n        </Card>\r\n      </Col>\r\n\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n          <Row className='justify-content-md-center'>\r\n             <Col xs={12} md={6}>\r\n                 {children}\r\n             </Col>\r\n          </Row>  \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Form, Row, Col, Button} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport {login} from '../Actions/userActions';\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n\r\n    const {loading, error, userInfo} = userLogin;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n      if(userInfo) {\r\n         history.push(redirect);\r\n      }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      dispatch(login(email, password));\r\n    };\r\n\r\n    return (\r\n      <FormContainer>\r\n         <h1> Sign In </h1>\r\n         {error && <Message variant='danger'> {error} </Message> }\r\n         {loading && <Loader />}\r\n         <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='email'>\r\n               <Form.Label> Email Address </Form.Label> \r\n               <Form.Control \r\n                  type='email' \r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n               <Form.Label> Password </Form.Label> \r\n               <Form.Control \r\n                  type='password' \r\n                  placeholder='Enter password'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n               Sign In\r\n            </Button>\r\n\r\n         </Form> \r\n\r\n         <Row className='py-3'>\r\n            <Col>\r\n            New Customer ?  \r\n            <Link to={redirect ? `/register?redirect=${redirect}` :\r\n               `/register`}\r\n               > \r\n                Register \r\n               </Link>\r\n            </Col>\r\n         </Row>\r\n\r\n      </FormContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Form, Row, Col, Button} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport {register} from '../Actions/userActions';\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector(state => state.userRegister);\r\n\r\n    const {loading, error, userInfo} = userRegister;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n      if(userInfo) {\r\n         history.push(redirect);\r\n      }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      if(password !== confirmPassword) {\r\n          setMessage('Password does not match');\r\n      } else {\r\n        dispatch(register(name, email, password));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <FormContainer>\r\n         <h1> Sign Up </h1>\r\n         {message && <Message variant='danger'> {message} </Message> }\r\n         {error && <Message variant='danger'> {error} </Message> }\r\n         {loading && <Loader />}\r\n         <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n               <Form.Label> Name </Form.Label> \r\n               <Form.Control \r\n                  type='name' \r\n                  placeholder='Enter name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n               <Form.Label> Email Address </Form.Label> \r\n               <Form.Control \r\n                  type='email' \r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n               <Form.Label> Password </Form.Label> \r\n               <Form.Control \r\n                  type='password' \r\n                  placeholder='Enter password'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n               <Form.Label> Confirm Password </Form.Label> \r\n               <Form.Control \r\n                  type='password' \r\n                  placeholder='Confirm password'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n               Register\r\n            </Button>\r\n\r\n         </Form> \r\n\r\n         <Row className='py-3'>\r\n            <Col>\r\n              Have an Account ? \r\n            <Link to={redirect ? `/login?redirect=${redirect}` :\r\n               `/login`}\r\n               > \r\n               Login \r\n               </Link>\r\n            </Col>\r\n         </Row>\r\n\r\n      </FormContainer>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {Form, Row, Col, Button, Table} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport {getUserDetails, updateUserProfile} from '../Actions/userActions';\r\nimport { listMyOrders } from '../Actions/orderActions';\r\n\r\nconst ProfileScreen = ({location, history}) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {loading, error, user} = userDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin;\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const {success} = userUpdateProfile;\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy);\r\n    const {loading:loadingOrders, error:errorOrders, orders} = orderListMy;\r\n\r\n    useEffect(() => {\r\n      if(!userInfo) {\r\n         history.push('/login');\r\n      } else {\r\n\r\n        if(!user.name) {\r\n           dispatch(getUserDetails('profile')); \r\n           dispatch(listMyOrders())\r\n        } else {\r\n           setName(user.name)\r\n           setEmail(user.email)\r\n        }\r\n\r\n      }\r\n    }, [dispatch, history, user, userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      if(password !== confirmPassword) {\r\n          setMessage('Password does not match');\r\n      } else {\r\n        dispatch(updateUserProfile({\r\n            id: user._id,\r\n            name,\r\n            email,\r\n            password,\r\n        }))\r\n      }\r\n    };\r\n\r\n    return (\r\n       <Row>\r\n\r\n           <Col md={3}>\r\n\r\n                <h2> User Profile </h2>\r\n                    {message && <Message variant='danger'> {message} </Message> }\r\n                    {error && <Message variant='danger'> {error} </Message> }\r\n                    {success && <Message variant='success'> {'Successfully updated your profile'} </Message> }\r\n                    {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label> Name </Form.Label> \r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label> Email Address </Form.Label> \r\n                        <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label> Password </Form.Label> \r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label> Confirm Password </Form.Label> \r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                     Update\r\n                    </Button>\r\n\r\n                </Form> \r\n\r\n           </Col>\r\n\r\n           <Col md={9}>\r\n               <h2> My Orders </h2>\r\n\r\n               {\r\n                   loadingOrders ? (\r\n                       <Loader />\r\n                   ) :\r\n                   errorOrders ? (\r\n                       <Message variant='danger'> {errorOrders}  </Message>\r\n                   ) : (\r\n                       <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                       >\r\n\r\n                           <thead>\r\n                               <tr>\r\n                                   <th>ID</th>\r\n                                   <th>DATE</th>\r\n                                   <th>TOTAL</th>\r\n                                   <th>PAID</th>\r\n                                   <th>DELIVERED</th>\r\n                                   <th></th>\r\n                               </tr>\r\n                           </thead>\r\n\r\n                           <tbody>\r\n                               {\r\n                                  orders.map(order => (\r\n                                    <tr key={order._id}>\r\n\r\n                                      <td>{order._id}</td>\r\n\r\n                                      <td>{order.createdAt.substring(0, 10)}</td>\r\n\r\n                                      <td>{order.totalPrice}</td>\r\n\r\n                                      <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}\r\n                                      </td>\r\n\r\n                                      <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}\r\n                                      </td>\r\n\r\n                                      <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>\r\n                                              Details\r\n                                            </Button>\r\n                                        </LinkContainer>  \r\n                                      </td>\r\n\r\n                                    </tr>  \r\n                                  )) \r\n                               }\r\n                           </tbody>\r\n\r\n                       </Table>\r\n                   )\r\n               }\r\n           </Col>\r\n\r\n       </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../Constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n  \r\n      dispatch({\r\n          type: ORDER_CREATE_REQUEST,\r\n      });\r\n  \r\n      const { userLogin: { userInfo } } = getState();\r\n  \r\n      const {data} = await axios.post(\r\n        `/api/orders`,\r\n        order, \r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          }\r\n        }\r\n      );\r\n  \r\n      dispatch({\r\n          type: ORDER_CREATE_SUCCESS,\r\n          payload: data\r\n      });\r\n  \r\n    } catch (error) {\r\n      dispatch({\r\n          type: ORDER_CREATE_FAIL,\r\n          payload: error.response && error.response.data.message ?\r\n          error.response.data.message : error.message,\r\n      });\r\n    }\r\n  \r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n   \r\n  try {\r\n\r\n    dispatch({\r\n        type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const {data} = await axios.get(\r\n      `/api/orders/${id}`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n        type: ORDER_DETAILS_SUCCESS,\r\n        payload: data\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n        type: ORDER_DETAILS_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n \r\n try {\r\n\r\n   dispatch({\r\n       type: ORDER_PAY_REQUEST,\r\n   });\r\n\r\n   const { userLogin: { userInfo } } = getState();\r\n\r\n   const {data} = await axios.put(\r\n    `/api/orders/${orderId}/pay`,\r\n     paymentResult,\r\n     {\r\n       headers: {\r\n         'Content-Type' : 'application/json',\r\n         Authorization: `Bearer ${userInfo.token}`,\r\n       }\r\n     }\r\n   );\r\n\r\n   dispatch({\r\n       type: ORDER_PAY_SUCCESS,\r\n       payload: data\r\n   });\r\n\r\n } catch (error) {\r\n   dispatch({\r\n       type: ORDER_PAY_FAIL,\r\n       payload: error.response && error.response.data.message ?\r\n       error.response.data.message : error.message,\r\n   });\r\n }\r\n\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n \r\n  try {\r\n \r\n    dispatch({\r\n        type: ORDER_DELIVER_REQUEST,\r\n    });\r\n \r\n    const { userLogin: { userInfo } } = getState();\r\n \r\n    const {data} = await axios.put(\r\n     `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      {\r\n        headers: {\r\n          'Content-Type' : 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        }\r\n      }\r\n    );\r\n \r\n    dispatch({\r\n        type: ORDER_DELIVER_SUCCESS,\r\n        payload: data\r\n    });\r\n \r\n  } catch (error) {\r\n    dispatch({\r\n        type: ORDER_DELIVER_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n \r\n };\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n \r\n  try {\r\n \r\n    dispatch({\r\n        type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n \r\n    const { userLogin: { userInfo } } = getState();\r\n \r\n    const {data} = await axios.get(\r\n     `/api/orders/myorders`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        }\r\n      }\r\n    );\r\n \r\n    dispatch({\r\n        type: ORDER_LIST_MY_SUCCESS,\r\n        payload: data\r\n    });\r\n \r\n  } catch (error) {\r\n    dispatch({\r\n        type: ORDER_LIST_MY_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n \r\n };\r\n\r\n export const listOrders = () => async (dispatch, getState) => {\r\n \r\n  try {\r\n \r\n    dispatch({\r\n        type: ORDER_LIST_REQUEST,\r\n    });\r\n \r\n    const { userLogin: { userInfo } } = getState();\r\n \r\n    const {data} = await axios.get(\r\n     `/api/orders`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        }\r\n      }\r\n    );\r\n \r\n    dispatch({\r\n        type: ORDER_LIST_SUCCESS,\r\n        payload: data\r\n    });\r\n \r\n  } catch (error) {\r\n    dispatch({\r\n        type: ORDER_LIST_FAIL,\r\n        payload: error.response && error.response.data.message ?\r\n        error.response.data.message : error.message,\r\n    });\r\n  }\r\n \r\n };","import React from 'react';\r\nimport {Nav} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n\r\n           <Nav.Item>\r\n               {\r\n                   step1 ? (\r\n                       <LinkContainer to='/login' >\r\n                         <Nav.Link> Sign In </Nav.Link>\r\n                       </LinkContainer>\r\n                   ) : (\r\n                       <Nav.Link disabled> Sign In </Nav.Link>\r\n                   )\r\n               }\r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n               {\r\n                   step2 ? (\r\n                       <LinkContainer to='/shipping' >\r\n                         <Nav.Link> Shipping </Nav.Link>\r\n                       </LinkContainer>\r\n                   ) : (\r\n                       <Nav.Link disabled> Shipping </Nav.Link>\r\n                   )\r\n               }\r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n               {\r\n                   step3 ? (\r\n                       <LinkContainer to='/payment' >\r\n                         <Nav.Link> Payment </Nav.Link>\r\n                       </LinkContainer>\r\n                   ) : (\r\n                       <Nav.Link disabled> Payment </Nav.Link>\r\n                   )\r\n               }\r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n               {\r\n                   step4 ? (\r\n                       <LinkContainer to='/placeorder' >\r\n                         <Nav.Link> Place Order </Nav.Link>\r\n                       </LinkContainer>\r\n                   ) : (\r\n                       <Nav.Link disabled> Place Order </Nav.Link>\r\n                   )\r\n               }\r\n            </Nav.Item> \r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport FormContainer from '../Components/FormContainer';\r\nimport { saveShippingAddress } from '../Actions/cardActions';\r\nimport CheckoutSteps from '../Components/CheckoutSteps';\r\n\r\nconst ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const {shippingAddress} = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log({\r\n            address,\r\n            city,\r\n            postalCode,\r\n            country,\r\n        })\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode,\r\n            country,\r\n        }));\r\n        history.push('/payment');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n           <CheckoutSteps \r\n             step1\r\n             step2\r\n           />\r\n           <h1>Shipping </h1>\r\n\r\n           <Form onSubmit={submitHandler}> \r\n\r\n           <Form.Group controlId='address'>\r\n               <Form.Label> Address </Form.Label> \r\n               <Form.Control \r\n                  type='text' \r\n                  placeholder='Enter address'\r\n                  value={address}\r\n                  required\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='city'>\r\n               <Form.Label> City </Form.Label> \r\n               <Form.Control \r\n                  type='text' \r\n                  placeholder='Enter city'\r\n                  value={city}\r\n                  required\r\n                  onChange={(e) => setCity(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='postalCode'>\r\n               <Form.Label> Postal Code </Form.Label> \r\n               <Form.Control \r\n                  type='text' \r\n                  placeholder='Enter postal code'\r\n                  value={postalCode}\r\n                  required\r\n                  onChange={(e) => setPostalCode(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='country'>\r\n               <Form.Label> Country </Form.Label> \r\n               <Form.Control \r\n                  type='text' \r\n                  placeholder='Enter country'\r\n                  value={country}\r\n                  required\r\n                  onChange={(e) => setCountry(e.target.value)}\r\n               >\r\n               </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Continue\r\n            </Button>\r\n\r\n           </Form>\r\n\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport {Form, Button, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport FormContainer from '../Components/FormContainer';\r\nimport { savePaymentMethod } from '../Actions/cardActions';\r\nimport CheckoutSteps from '../Components/CheckoutSteps';\r\n\r\nconst PaymentScreen = ({history}) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const {shippingAddress} = cart;\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping');\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n           <CheckoutSteps \r\n             step1\r\n             step2\r\n             step3\r\n           />\r\n           <h1>Payment Method </h1>\r\n\r\n           <Form onSubmit={submitHandler}> \r\n\r\n            <Form.Group>\r\n                <Form.Label as='legend'> Select Method </Form.Label>\r\n\r\n                <Col>\r\n\r\n                    <Form.Check \r\n                        type='radio' \r\n                        label='Paypal or Credit Card' \r\n                        id='Paypal'\r\n                        name='paymentMethod'\r\n                        value='Paypal'\r\n                        checked\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n\r\n                    {/* <Form.Check \r\n                        type='radio' \r\n                        label='Stripe' \r\n                        id='stripe'\r\n                        name='paymentMethod'\r\n                        value='Stripe'\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check> */}\r\n\r\n                </Col>\r\n\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Continue\r\n            </Button>\r\n\r\n           </Form>\r\n\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../Components/Message';\r\nimport CheckoutSteps from '../Components/CheckoutSteps';\r\nimport { createOrder } from '../Actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    // this function is to ensure decimal place of two\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    // Calculate item prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n\r\n    // Calculate shipping price\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n\r\n    // Calculate tax price\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n    // Calculate total price\r\n    cart.totalPrice = (\r\n       Number(cart.itemsPrice) +\r\n       Number(cart.shippingPrice) +\r\n       Number(cart.taxPrice)\r\n    ).toFixed(2);\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n    const {order, success, error} = orderCreate;\r\n\r\n    useEffect(() => {\r\n      if(success) {\r\n        history.push(`/order/${order._id}`);\r\n      }\r\n      // eslint-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n           orderItems: cart.cartItems, \r\n           shippingAddress: cart.shippingAddress,\r\n           paymentMethod: cart.paymentMethod,\r\n           itemsPrice: cart.itemsPrice,\r\n           shippingPrice: cart.shippingPrice,\r\n           taxPrice: cart.taxPrice,\r\n           totalPrice: cart.totalPrice,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n\r\n            <Row>\r\n\r\n                <Col md={8}>\r\n                  <ListGroup variant='flush'>\r\n\r\n                     <ListGroup.Item>\r\n                         <h2> Shipping </h2>\r\n                         <p>\r\n                             <strong> Address: </strong>\r\n                             {cart.shippingAddress.address},{' '}\r\n                             {cart.shippingAddress.city},{' '}\r\n                             {cart.shippingAddress.postalCode},{' '}\r\n                             {cart.shippingAddress.country}\r\n                         </p>\r\n                     </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n                         <h2> Payment Method </h2>\r\n                         <strong> Method: </strong>\r\n                         {cart.paymentMethod}\r\n                     </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n                         <h2> Order Items </h2>\r\n                         {cart.cartItems.length === 0 ? (\r\n                            <Message> Your cart is empty </Message>\r\n                         ) : (\r\n                            <ListGroup variant='flush'>\r\n                               {cart.cartItems.map((item, index) => (\r\n                                   <ListGroup.Item key={index}>\r\n                                      <Row>\r\n                                          <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded /> \r\n                                          </Col>\r\n                                          <Col>\r\n                                             <Link to={`/product/${item.product}`}>\r\n                                                 {item.name}\r\n                                             </Link>\r\n                                          </Col>\r\n                                          <Col md={4}>\r\n                                              {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                          </Col>\r\n                                      </Row>\r\n                                   </ListGroup.Item>\r\n                               ))}\r\n                            </ListGroup>\r\n                         )}\r\n                     </ListGroup.Item>\r\n\r\n                  </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                   <Card>\r\n                       <ListGroup variant='flush'>\r\n\r\n                         <ListGroup.Item>\r\n                             <h2> Order Summary </h2>\r\n                         </ListGroup.Item>\r\n\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Items </Col>\r\n                                 <Col> ${cart.itemsPrice} </Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Shipping </Col>\r\n                                 <Col> ${cart.shippingPrice} </Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Tax </Col>\r\n                                 <Col> ${cart.taxPrice} </Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Total </Col>\r\n                                 <Col> ${cart.totalPrice} </Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n\r\n                         <ListGroup.Item>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                         </ListGroup.Item>\r\n\r\n                         <ListGroup.Item>\r\n                             <Button\r\n                                type='button' \r\n                                className='btn-block' \r\n                                disabled={cart.cartItems.length === 0}\r\n                                onClick={placeOrderHandler}\r\n                                >\r\n                               Place Order\r\n                             </Button>\r\n                         </ListGroup.Item>\r\n\r\n                       </ListGroup>\r\n                   </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {PayPalButton} from 'react-paypal-button-v2';\r\nimport {Link} from 'react-router-dom';\r\nimport {Row, Col, ListGroup, Image, Card, Button} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../Actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../Constants/orderConstants';\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n    const orderId = match.params.id;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const {order, loading, error} = orderDetails;\r\n\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const { loading:loadingPay, success:successPay} = orderPay;\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { loading:loadingDeliver, success:successDeliver} = orderDeliver;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin;\r\n\r\n    if(!loading) {\r\n        // this function is to ensure decimal place of two\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2);\r\n        };\r\n        \r\n        // Calculate item prices\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   dispatch(getOrderDetails(orderId));\r\n    // }, [dispatch, orderId]);\r\n\r\n    // class note message code adjustment\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n          const { data: clientId } = await axios.get('/api/config/paypal');\r\n          \r\n          const script = document.createElement('script');\r\n          script.type = 'text/javascript';\r\n          script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n          script.async = true;\r\n          script.onload = () => {\r\n            setSdkReady(true);\r\n          };\r\n          document.body.appendChild(script);\r\n        };\r\n\r\n        if(!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId));\r\n        } else if (!order.isPaid) {\r\n\r\n            if(!window.paypal) {\r\n                addPayPalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n\r\n        }\r\n\r\n        // if(!order || order._id !== orderId) {\r\n        //     dispatch(getOrderDetails(orderId))\r\n        // }\r\n    }, [ dispatch, order, orderId, successPay, successDeliver, history, userInfo])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n       console.log(paymentResult);\r\n       dispatch(payOrder(orderId, paymentResult));\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    };\r\n\r\n    return  loading ? <Loader/> :\r\n            error ? <Message variant='danger'> {error} </Message> :\r\n            <>\r\n                <h1>Order id : {order._id} </h1>\r\n                <Row>\r\n\r\n                    <Col md={8}>\r\n                        <ListGroup variant='flush'>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2> Shipping </h2>\r\n\r\n                                <p> \r\n                                    <strong>Name: </strong> {order.user.name} \r\n                                </p>\r\n\r\n                                <p>\r\n                                <strong>Email: </strong> <a href={`mailto:${order.user.email}`}> {order.user.email} </a>\r\n                                </p>\r\n\r\n                                <p>\r\n                                    <strong> Address: </strong>\r\n                                    {order.shippingAddress.address},{' '}\r\n                                    {order.shippingAddress.city},{' '}\r\n                                    {order.shippingAddress.postalCode},{' '}\r\n                                    {order.shippingAddress.country}\r\n                                </p>\r\n\r\n                                {\r\n                                    order.isDelivered ? (\r\n                                        <Message variant='success'>\r\n                                            Delivered on {order.deliveredAt}\r\n                                        </Message>\r\n                                    ) : (\r\n                                        <Message variant='danger'>\r\n                                            Not Delivered\r\n                                        </Message>\r\n                                    )\r\n                                }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2> Payment Method </h2>\r\n\r\n                                <p>\r\n                                    <strong> Method: </strong>\r\n                                    {order.paymentMethod}\r\n                                </p>\r\n\r\n                                {\r\n                                    order.isPaid ? (\r\n                                        <Message variant='success'>\r\n                                            Paid on {order.paidAt}\r\n                                        </Message>\r\n                                    ) : (\r\n                                        <Message variant='danger'>\r\n                                            Not Paid\r\n                                        </Message>\r\n                                    )\r\n                                }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2> Order Items </h2>\r\n                                {order.orderItems.length === 0 ? (\r\n                                    <Message> Order is empty </Message>\r\n                                ) : (\r\n                                    <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded /> \r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2> Order Summary </h2>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col> Items </Col>\r\n                                        <Col> ${order.itemsPrice} </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col> Shipping </Col>\r\n                                        <Col> ${order.shippingPrice} </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col> Tax </Col>\r\n                                        <Col> ${order.taxPrice} </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col> Total </Col>\r\n                                        <Col> ${order.totalPrice} </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {\r\n                                    !order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && (<Loader />)}\r\n                                            {!sdkReady ? (\r\n                                                <Loader /> \r\n                                                ) : (\r\n                                                <PayPalButton \r\n                                                  amount={order.totalPrice}\r\n                                                  onSuccess={successPaymentHandler}\r\n                                                />\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    )\r\n                                }\r\n\r\n                                {loadingDeliver && <Loader />}\r\n\r\n                                {\r\n                                    userInfo && \r\n                                    userInfo.isAdmin && \r\n                                    order.isPaid && \r\n                                    !order.isDelivered && (\r\n                                       <Button \r\n                                            type='button'\r\n                                            className=\"btn btn-block\"\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                           Mark as Delivered \r\n                                        </Button>\r\n                                    )\r\n                                }\r\n\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </>\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport { ListUsers, deleteUser } from '../Actions/userActions';\r\n\r\nconst UserListScreen = ({history}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector(state => state.userList);\r\n    const {loading, error, users} = userList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin;\r\n\r\n    const userDelete = useSelector(state => state.userDelete);\r\n    const {success:successDelete} = userDelete;\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(ListUsers());\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo]);\r\n\r\n    const deleteHandler = (id) => {\r\n      if(window.confirm('Are you sure ?')) {\r\n        dispatch(deleteUser(id));\r\n      }\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <h1>Users</h1>\r\n         {\r\n            loading ? (\r\n                <Loader />\r\n            ) : \r\n            error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table \r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    responsive\r\n                    className='table-sm'\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                      {\r\n                        users.map(user => (\r\n                           <tr key={user._id}>\r\n                              <td>{user._id}</td> \r\n                              <td>{user.name}</td> \r\n                              <td><a href={`mailto:${user.email}`}>{user.email}</a></td> \r\n                              <td>\r\n                                  {\r\n                                    user.isAdmin ? (\r\n                                        <i className='fas fa-check' style={{color: 'green'}}></i>\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}></i>\r\n                                    )\r\n                                  }\r\n                              </td>\r\n                              <td>\r\n                                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                      <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>\r\n                                      </Button>\r\n                                  </LinkContainer>\r\n\r\n                                  <Button \r\n                                    variant='danger' \r\n                                    className='btn-sm' \r\n                                    onClick={() => deleteHandler(user._id)}\r\n                                  >\r\n                                    <i className='fas fa-trash'></i>\r\n                                  </Button>\r\n                              </td>\r\n                           </tr> \r\n                        ))\r\n                      }  \r\n                    </tbody>\r\n                </Table>\r\n            )\r\n         }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport {getUserDetails, updateUser} from '../Actions/userActions';\r\nimport {USER_UPDATE_RESET} from '../Constants/userConstants';\r\n\r\nconst UserEditScreen = ({match, history}) => {\r\n    const userId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {loading, error, user} = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const {loading:loadingUpdate, error:errorUpdate, success:successUpdate} = userUpdate;\r\n\r\n    useEffect(() => {\r\n       if(successUpdate) {\r\n          dispatch({ type: USER_UPDATE_RESET});\r\n          history.push('/admin/userlist');\r\n       } else {\r\n        if(!user.name || user._id !== userId) {\r\n            dispatch(getUserDetails(userId));\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setIsAdmin(user.isAdmin);\r\n        }\r\n       }\r\n    }, [dispatch, history, userId, user, successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      dispatch(updateUser({_id: userId, name, email, isAdmin}));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1> Edit User </h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n               {\r\n                   loading ? (\r\n                       <Loader />\r\n                   ) : \r\n                   error ? (\r\n                       <Message variant='danger'>{error}</Message>\r\n                   ) : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label> Name </Form.Label> \r\n                                <Form.Control \r\n                                    type='name' \r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label> Email Address </Form.Label> \r\n                                <Form.Control \r\n                                    type='email' \r\n                                    placeholder='Enter email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check \r\n                                    type='checkbox' \r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                              Update\r\n                            </Button>\r\n\r\n                        </Form> \r\n                   )\r\n               }\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport { \r\n  listProducts, \r\n  deleteProduct,\r\n  createProduct, \r\n} from '../Actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../Constants/ProductsConstants';\r\nimport Paginate from '../Components/Paginate';\r\n\r\nconst ProductListScreen = ({history, match}) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const {loading, error, products, pages, page} = productList;\r\n\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete} = productDelete;\r\n\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const {loading:loadingCreate, error:errorCreate, success:successCreate, product: createdProduct} = productCreate;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin;\r\n\r\n    useEffect(() => {\r\n      dispatch({type: PRODUCT_CREATE_RESET});\r\n\r\n        if(!userInfo.isAdmin) {\r\n          history.push('/login')\r\n        }\r\n\r\n        if(successCreate) {\r\n          history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n          dispatch(listProducts('', pageNumber))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber]);\r\n\r\n    const deleteHandler = (id) => {\r\n      if(window.confirm('Are you sure ?')) {\r\n        dispatch(deleteProduct(id));\r\n      }\r\n    };\r\n\r\n    const createProductHandler = () => {\r\n      dispatch(createProduct())\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <Row>\r\n           <Col>\r\n                <h1>Products</h1>\r\n           </Col>  \r\n           <Col className='text-right'>\r\n                <Button className='my-3' onClick={createProductHandler}>\r\n                    <i className='fas fa-plus'></i>\r\n                    Create Product\r\n                </Button>\r\n           </Col>\r\n         </Row>\r\n\r\n         {loadingDelete && <Loader />}\r\n         {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n         {loadingCreate && <Loader />}\r\n         {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n         {\r\n            loading ? (\r\n                <Loader />\r\n            ) : \r\n            error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n              <>\r\n                <Table \r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    responsive\r\n                    className='table-sm'\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                      {\r\n                        products.map(product => (\r\n                           <tr key={product._id}>\r\n                              <td>{product._id}</td> \r\n                              <td>{product.name}</td> \r\n                              <td>${product.price}</td> \r\n                              <td>{product.category} </td>\r\n                              <td>{product.brand} </td>\r\n                              <td>\r\n                                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                      <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>\r\n                                      </Button>\r\n                                  </LinkContainer>\r\n\r\n                                  <Button \r\n                                    variant='danger' \r\n                                    className='btn-sm' \r\n                                    onClick={() => deleteHandler(product._id)}\r\n                                  >\r\n                                    <i className='fas fa-trash'></i>\r\n                                  </Button>\r\n                              </td>\r\n                           </tr> \r\n                        ))\r\n                      }  \r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Paginate pages={pages} page={page} isAdmin={true} />\r\n              </>\r\n            )\r\n         }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport {listProductDetails, updateProduct} from '../Actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../Constants/ProductsConstants';\r\n\r\nconst ProductEditScreen = ({match, history}) => {\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const {loading, error, product} = productDetails;\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate);\r\n    const {loading:loadingupdate, error:errorUpdate, success:successUpdate} = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({type: PRODUCT_UPDATE_RESET});\r\n            history.push('/admin/productList');\r\n        } else {\r\n            if(!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId));\r\n            } else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setBrand(product.brand);\r\n                setCategory(product.category);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n    const uploadFilehandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            };\r\n\r\n            const {data} = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n\r\n            setUploading(false);\r\n        } catch (error) {\r\n           console.log(error);\r\n           setUploading(false); \r\n        }\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      dispatch(updateProduct({\r\n          _id: productId,\r\n          name,\r\n          price,\r\n          image,\r\n          brand,\r\n          category,\r\n          description,\r\n          countInStock,\r\n      }))\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1> Edit Product </h1>\r\n                {loadingupdate && <loader />}\r\n                {errorUpdate && <Message variant='danger'>[errorUpdate]</Message>}\r\n               {\r\n                   loading ? (\r\n                       <Loader />\r\n                   ) : \r\n                   error ? (\r\n                       <Message variant='danger'>{error}</Message>\r\n                   ) : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label> Name </Form.Label> \r\n                                <Form.Control \r\n                                    type='name' \r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label> Price </Form.Label> \r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label> Image </Form.Label> \r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter image url'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.File \r\n                                    id=\"image-file\" \r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFilehandler}\r\n                                >\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label> Brand </Form.Label> \r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label> Count In Stock </Form.Label> \r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='Enter count in stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label> Category </Form.Label> \r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label> Description </Form.Label> \r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                              Update\r\n                            </Button>\r\n\r\n                        </Form> \r\n                   )\r\n               }\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport { listOrders } from '../Actions/orderActions';\r\n\r\nconst OrderListScreen = ({history}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector(state => state.orderList);\r\n    const {loading, error, orders} = orderList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const {userInfo} = userLogin;\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch( listOrders());\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    return (\r\n        <>\r\n         <h1>Orders</h1>\r\n         {\r\n            loading ? (\r\n                <Loader />\r\n            ) : \r\n            error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table \r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    responsive\r\n                    className='table-sm'\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                      {\r\n                        orders.map(order => (\r\n                           <tr key={order._id}>\r\n                              <td>{order._id}</td> \r\n                              <td>{order.user && order.user.name}</td> \r\n                              <td>{order.createdAt.substring(0, 10)}</td> \r\n                              <td>${order.totalPrice}</td> \r\n                              <td>\r\n                                  {\r\n                                    order.isPaid ? (\r\n                                       order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )\r\n                                  }\r\n                              </td>\r\n                              <td>\r\n                                  {\r\n                                    order.isDelivered ? (\r\n                                       order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )\r\n                                  }\r\n                              </td>\r\n                              <td>\r\n                                  <LinkContainer to={`/order/${order._id}`}>\r\n                                      <Button variant='light' className='btn-sm'>\r\n                                       Details\r\n                                      </Button>\r\n                                  </LinkContainer>\r\n                              </td>\r\n                           </tr> \r\n                        ))\r\n                      }  \r\n                    </tbody>\r\n                </Table>\r\n            )\r\n         }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\n\nimport HomeScreen from './Screens/HomeScreen';\nimport ProductScreen from './Screens/ProductScreen';\nimport CartScreen from './Screens/CartScreen';\nimport LoginScreen from './Screens/LoginScreen';\nimport RegisterScreen from './Screens/RegisterScreen';\nimport ProfileScreen from './Screens/ProfileScreen';\nimport ShippingScreen from './Screens/ShippingScreen';\nimport PaymentScreen from './Screens/PaymentScreen';\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen';\nimport OrderScreen from './Screens/OrderScreen';\nimport UserListScreen from './Screens/UserListScreen';\nimport UserEditScreen from './Screens/UserEditScreen';\nimport ProductListScreen from './Screens/ProductListScreen';\nimport ProductEditScreen from './Screens/ProductEditScreen';\nimport OrderListScreen from './Screens/OrderListScreen';\n\n\nconst App =() => {\n  return (\n    <Router>\n     <Header />\n       <main className=\"py-3\">\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/product/:id' component={ProductScreen}  />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n        </main>\n      <Footer /> \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Store from './Store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}